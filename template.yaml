AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: EPIPIC 3.0 Stack
Parameters:
  Environment:
    Type: String
Resources:
  EpipicAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Sub ${Environment}
      DefinitionBody:
        swagger: 2.0
        info:
          title:
            Ref: AWS::StackName
        x-amazon-apigateway-binary-media-types:
          - '*/*'
        paths:
          /pictures:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Lambda.Arn}/invocations
              responses: {}
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Lambda.Arn}/invocations
              responses: {}
  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Lambda-${Environment}
      Handler: index.lambda_handler
      Runtime: nodejs6.10
      CodeUri: src
      Environment:
        Variables:
          TABLE_NAME: !Ref PictureTable
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonDynamoDBFullAccess
      Events:
        GetPicture:
          Type: Api
          Properties:
            Path: /pictures
            Method: get
            RestApiId:
              Ref: EpipicAPI
        PostPicture:
          Type: Api
          Properties:
            Path: /pictures
            Method: post
            RestApiId:
              Ref: EpipicAPI
  PictureTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${S3Bucket}/*
      Bucket: !Ref S3Bucket
Outputs:
  WebsiteURL:
    Value: !GetAtt S3Bucket.WebsiteURL
    Description: URL for Epipic hosted on S3
  ApiGWURL:
    Value: !Sub https://${EpipicAPI}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/
    Description: API Gateway endpoint